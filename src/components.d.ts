/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AddBooks {
    }
    interface AdminHome {
    }
    interface AdminLogin {
    }
    interface EditBook {
    }
    interface HomePage {
        "name1": string;
        "type": string;
    }
    interface IssueBook {
    }
    interface LibRouter {
    }
    interface TestingDemo {
    }
    interface UserHome {
    }
    interface UserLogin {
    }
    interface UserProfile {
    }
    interface UserSignup {
    }
    interface UserViewbooks {
    }
    interface ViewBooks {
    }
    interface ViewIssuebooks {
    }
    interface ViewIssuestatus {
    }
    interface ViewUsers {
    }
}
declare global {
    interface HTMLAddBooksElement extends Components.AddBooks, HTMLStencilElement {
    }
    var HTMLAddBooksElement: {
        prototype: HTMLAddBooksElement;
        new (): HTMLAddBooksElement;
    };
    interface HTMLAdminHomeElement extends Components.AdminHome, HTMLStencilElement {
    }
    var HTMLAdminHomeElement: {
        prototype: HTMLAdminHomeElement;
        new (): HTMLAdminHomeElement;
    };
    interface HTMLAdminLoginElement extends Components.AdminLogin, HTMLStencilElement {
    }
    var HTMLAdminLoginElement: {
        prototype: HTMLAdminLoginElement;
        new (): HTMLAdminLoginElement;
    };
    interface HTMLEditBookElement extends Components.EditBook, HTMLStencilElement {
    }
    var HTMLEditBookElement: {
        prototype: HTMLEditBookElement;
        new (): HTMLEditBookElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLIssueBookElement extends Components.IssueBook, HTMLStencilElement {
    }
    var HTMLIssueBookElement: {
        prototype: HTMLIssueBookElement;
        new (): HTMLIssueBookElement;
    };
    interface HTMLLibRouterElement extends Components.LibRouter, HTMLStencilElement {
    }
    var HTMLLibRouterElement: {
        prototype: HTMLLibRouterElement;
        new (): HTMLLibRouterElement;
    };
    interface HTMLTestingDemoElement extends Components.TestingDemo, HTMLStencilElement {
    }
    var HTMLTestingDemoElement: {
        prototype: HTMLTestingDemoElement;
        new (): HTMLTestingDemoElement;
    };
    interface HTMLUserHomeElement extends Components.UserHome, HTMLStencilElement {
    }
    var HTMLUserHomeElement: {
        prototype: HTMLUserHomeElement;
        new (): HTMLUserHomeElement;
    };
    interface HTMLUserLoginElement extends Components.UserLogin, HTMLStencilElement {
    }
    var HTMLUserLoginElement: {
        prototype: HTMLUserLoginElement;
        new (): HTMLUserLoginElement;
    };
    interface HTMLUserProfileElement extends Components.UserProfile, HTMLStencilElement {
    }
    var HTMLUserProfileElement: {
        prototype: HTMLUserProfileElement;
        new (): HTMLUserProfileElement;
    };
    interface HTMLUserSignupElement extends Components.UserSignup, HTMLStencilElement {
    }
    var HTMLUserSignupElement: {
        prototype: HTMLUserSignupElement;
        new (): HTMLUserSignupElement;
    };
    interface HTMLUserViewbooksElement extends Components.UserViewbooks, HTMLStencilElement {
    }
    var HTMLUserViewbooksElement: {
        prototype: HTMLUserViewbooksElement;
        new (): HTMLUserViewbooksElement;
    };
    interface HTMLViewBooksElement extends Components.ViewBooks, HTMLStencilElement {
    }
    var HTMLViewBooksElement: {
        prototype: HTMLViewBooksElement;
        new (): HTMLViewBooksElement;
    };
    interface HTMLViewIssuebooksElement extends Components.ViewIssuebooks, HTMLStencilElement {
    }
    var HTMLViewIssuebooksElement: {
        prototype: HTMLViewIssuebooksElement;
        new (): HTMLViewIssuebooksElement;
    };
    interface HTMLViewIssuestatusElement extends Components.ViewIssuestatus, HTMLStencilElement {
    }
    var HTMLViewIssuestatusElement: {
        prototype: HTMLViewIssuestatusElement;
        new (): HTMLViewIssuestatusElement;
    };
    interface HTMLViewUsersElement extends Components.ViewUsers, HTMLStencilElement {
    }
    var HTMLViewUsersElement: {
        prototype: HTMLViewUsersElement;
        new (): HTMLViewUsersElement;
    };
    interface HTMLElementTagNameMap {
        "add-books": HTMLAddBooksElement;
        "admin-home": HTMLAdminHomeElement;
        "admin-login": HTMLAdminLoginElement;
        "edit-book": HTMLEditBookElement;
        "home-page": HTMLHomePageElement;
        "issue-book": HTMLIssueBookElement;
        "lib-router": HTMLLibRouterElement;
        "testing-demo": HTMLTestingDemoElement;
        "user-home": HTMLUserHomeElement;
        "user-login": HTMLUserLoginElement;
        "user-profile": HTMLUserProfileElement;
        "user-signup": HTMLUserSignupElement;
        "user-viewbooks": HTMLUserViewbooksElement;
        "view-books": HTMLViewBooksElement;
        "view-issuebooks": HTMLViewIssuebooksElement;
        "view-issuestatus": HTMLViewIssuestatusElement;
        "view-users": HTMLViewUsersElement;
    }
}
declare namespace LocalJSX {
    interface AddBooks {
    }
    interface AdminHome {
    }
    interface AdminLogin {
    }
    interface EditBook {
    }
    interface HomePage {
        "name1"?: string;
        "type"?: string;
    }
    interface IssueBook {
    }
    interface LibRouter {
    }
    interface TestingDemo {
    }
    interface UserHome {
    }
    interface UserLogin {
    }
    interface UserProfile {
    }
    interface UserSignup {
    }
    interface UserViewbooks {
    }
    interface ViewBooks {
    }
    interface ViewIssuebooks {
    }
    interface ViewIssuestatus {
    }
    interface ViewUsers {
    }
    interface IntrinsicElements {
        "add-books": AddBooks;
        "admin-home": AdminHome;
        "admin-login": AdminLogin;
        "edit-book": EditBook;
        "home-page": HomePage;
        "issue-book": IssueBook;
        "lib-router": LibRouter;
        "testing-demo": TestingDemo;
        "user-home": UserHome;
        "user-login": UserLogin;
        "user-profile": UserProfile;
        "user-signup": UserSignup;
        "user-viewbooks": UserViewbooks;
        "view-books": ViewBooks;
        "view-issuebooks": ViewIssuebooks;
        "view-issuestatus": ViewIssuestatus;
        "view-users": ViewUsers;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-books": LocalJSX.AddBooks & JSXBase.HTMLAttributes<HTMLAddBooksElement>;
            "admin-home": LocalJSX.AdminHome & JSXBase.HTMLAttributes<HTMLAdminHomeElement>;
            "admin-login": LocalJSX.AdminLogin & JSXBase.HTMLAttributes<HTMLAdminLoginElement>;
            "edit-book": LocalJSX.EditBook & JSXBase.HTMLAttributes<HTMLEditBookElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "issue-book": LocalJSX.IssueBook & JSXBase.HTMLAttributes<HTMLIssueBookElement>;
            "lib-router": LocalJSX.LibRouter & JSXBase.HTMLAttributes<HTMLLibRouterElement>;
            "testing-demo": LocalJSX.TestingDemo & JSXBase.HTMLAttributes<HTMLTestingDemoElement>;
            "user-home": LocalJSX.UserHome & JSXBase.HTMLAttributes<HTMLUserHomeElement>;
            "user-login": LocalJSX.UserLogin & JSXBase.HTMLAttributes<HTMLUserLoginElement>;
            "user-profile": LocalJSX.UserProfile & JSXBase.HTMLAttributes<HTMLUserProfileElement>;
            "user-signup": LocalJSX.UserSignup & JSXBase.HTMLAttributes<HTMLUserSignupElement>;
            "user-viewbooks": LocalJSX.UserViewbooks & JSXBase.HTMLAttributes<HTMLUserViewbooksElement>;
            "view-books": LocalJSX.ViewBooks & JSXBase.HTMLAttributes<HTMLViewBooksElement>;
            "view-issuebooks": LocalJSX.ViewIssuebooks & JSXBase.HTMLAttributes<HTMLViewIssuebooksElement>;
            "view-issuestatus": LocalJSX.ViewIssuestatus & JSXBase.HTMLAttributes<HTMLViewIssuestatusElement>;
            "view-users": LocalJSX.ViewUsers & JSXBase.HTMLAttributes<HTMLViewUsersElement>;
        }
    }
}
